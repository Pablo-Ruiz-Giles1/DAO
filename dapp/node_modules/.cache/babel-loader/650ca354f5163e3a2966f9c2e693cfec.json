{"ast":null,"code":"import { is, check, uid as nextSagaId, wrapSagaDispatch, noop, log } from './utils';\nimport proc from './proc';\nvar RUN_SAGA_SIGNATURE = 'runSaga(storeInterface, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ': saga argument must be a Generator function!';\nexport function runSaga(storeInterface, saga) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  var iterator = void 0;\n  if (is.iterator(storeInterface)) {\n    if (process.env.NODE_ENV === 'development') {\n      log('warn', 'runSaga(iterator, storeInterface) has been deprecated in favor of ' + RUN_SAGA_SIGNATURE);\n    }\n    iterator = storeInterface;\n    storeInterface = saga;\n  } else {\n    check(saga, is.func, NON_GENERATOR_ERR);\n    iterator = saga.apply(undefined, args);\n    check(iterator, is.iterator, NON_GENERATOR_ERR);\n  }\n  var _storeInterface = storeInterface,\n    subscribe = _storeInterface.subscribe,\n    dispatch = _storeInterface.dispatch,\n    getState = _storeInterface.getState,\n    context = _storeInterface.context,\n    sagaMonitor = _storeInterface.sagaMonitor,\n    logger = _storeInterface.logger,\n    onError = _storeInterface.onError;\n  var effectId = nextSagaId();\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n    sagaMonitor.effectTriggered({\n      effectId: effectId,\n      root: true,\n      parentEffectId: 0,\n      effect: {\n        root: true,\n        saga: saga,\n        args: args\n      }\n    });\n  }\n  var task = proc(iterator, subscribe, wrapSagaDispatch(dispatch), getState, context, {\n    sagaMonitor: sagaMonitor,\n    logger: logger,\n    onError: onError\n  }, effectId, saga.name);\n  if (sagaMonitor) {\n    sagaMonitor.effectResolved(effectId, task);\n  }\n  return task;\n}","map":{"version":3,"names":["is","check","uid","nextSagaId","wrapSagaDispatch","noop","log","proc","RUN_SAGA_SIGNATURE","NON_GENERATOR_ERR","runSaga","storeInterface","saga","_len","arguments","length","args","Array","_key","iterator","process","env","NODE_ENV","func","apply","undefined","_storeInterface","subscribe","dispatch","getState","context","sagaMonitor","logger","onError","effectId","effectTriggered","effectResolved","effectRejected","effectCancelled","actionDispatched","root","parentEffectId","effect","task","name"],"sources":["/home/pablo/Desktop/DAO/dapp/node_modules/redux-saga/es/internal/runSaga.js"],"sourcesContent":["import { is, check, uid as nextSagaId, wrapSagaDispatch, noop, log } from './utils';\nimport proc from './proc';\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(storeInterface, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ': saga argument must be a Generator function!';\n\nexport function runSaga(storeInterface, saga) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator = void 0;\n\n  if (is.iterator(storeInterface)) {\n    if (process.env.NODE_ENV === 'development') {\n      log('warn', 'runSaga(iterator, storeInterface) has been deprecated in favor of ' + RUN_SAGA_SIGNATURE);\n    }\n    iterator = storeInterface;\n    storeInterface = saga;\n  } else {\n    check(saga, is.func, NON_GENERATOR_ERR);\n    iterator = saga.apply(undefined, args);\n    check(iterator, is.iterator, NON_GENERATOR_ERR);\n  }\n\n  var _storeInterface = storeInterface,\n      subscribe = _storeInterface.subscribe,\n      dispatch = _storeInterface.dispatch,\n      getState = _storeInterface.getState,\n      context = _storeInterface.context,\n      sagaMonitor = _storeInterface.sagaMonitor,\n      logger = _storeInterface.logger,\n      onError = _storeInterface.onError;\n\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n\n    sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: saga, args: args } });\n  }\n\n  var task = proc(iterator, subscribe, wrapSagaDispatch(dispatch), getState, context, { sagaMonitor: sagaMonitor, logger: logger, onError: onError }, effectId, saga.name);\n\n  if (sagaMonitor) {\n    sagaMonitor.effectResolved(effectId, task);\n  }\n\n  return task;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}