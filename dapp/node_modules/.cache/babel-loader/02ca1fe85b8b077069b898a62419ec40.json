{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/ipfs/watchipfs.js\",\n  _s = $RefreshSig$();\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst Watchipfs = ({\n  children\n}) => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const address = drizzleState.accounts[0];\n  //  const balance = drizzleState.accountBalances[address];\n\n  //Obtenemos los ids de los tokens que tiene este usuario\n  const nftsid = useCacheCall(\"NFTContract\", \"getNFTsByOwner\", address);\n  let data = useCacheCall(\"NFTContract\", \"_nftMetadata\", nftsid);\n  //bucle\n  //Otro componente\n  //SAcar el CID, dado el numero\n  // const admin = useCacheCall(\"NFTContract\", \"_nftMetadata\", admin[0]);\n\n  //Mostrar las imagenes\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\"A\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data === null || data === void 0 ? void 0 : data.cid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data === null || data === void 0 ? void 0 : data.creator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Watchipfs, \"nKqIyELmF23rrd1yj7mu0+xqNqg=\", true, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = Watchipfs;\nexport default Watchipfs;\nvar _c;\n$RefreshReg$(_c, \"Watchipfs\");","map":{"version":3,"names":["drizzleReactHooks","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","Watchipfs","children","_s","useCacheCall","drizzleState","state","address","accounts","nftsid","data","fileName","_jsxFileName","lineNumber","columnNumber","cid","creator","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/ipfs/watchipfs.js"],"sourcesContent":["import {drizzleReactHooks} from '@drizzle/react-plugin'\n\nconst {useDrizzle, useDrizzleState} = drizzleReactHooks;\n\nconst Watchipfs = ({children}) => {\n    const {useCacheCall} = useDrizzle();\n    const drizzleState = useDrizzleState(state => state);\n\n    const address = drizzleState.accounts[0];\n  //  const balance = drizzleState.accountBalances[address];\n  \n    //Obtenemos los ids de los tokens que tiene este usuario\n    const nftsid = useCacheCall(\"NFTContract\", \"getNFTsByOwner\", address);\n\n    let data = useCacheCall(\"NFTContract\", \"_nftMetadata\", nftsid);\n    //bucle\n    //Otro componente\n    //SAcar el CID, dado el numero\n   // const admin = useCacheCall(\"NFTContract\", \"_nftMetadata\", admin[0]);\n\n    //Mostrar las imagenes\n    return<>\n    <tbody>\n     <th>A<sub>{data}</sub></th>\n <td>{data?.cid}</td>\n <td>{data?.creator}</td>\n </tbody>\n    </>\n\n\n     \n\n};\nexport default Watchipfs;"],"mappings":";;AAAA,SAAQA,iBAAiB,QAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAM;EAACC,UAAU;EAAEC;AAAe,CAAC,GAAGN,iBAAiB;AAEvD,MAAMO,SAAS,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM;IAACC;EAAY,CAAC,GAAGL,UAAU,CAAC,CAAC;EACnC,MAAMM,YAAY,GAAGL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAAC;EAEpD,MAAMC,OAAO,GAAGF,YAAY,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC1C;;EAEE;EACA,MAAMC,MAAM,GAAGL,YAAY,CAAC,aAAa,EAAE,gBAAgB,EAAEG,OAAO,CAAC;EAErE,IAAIG,IAAI,GAAGN,YAAY,CAAC,aAAa,EAAE,cAAc,EAAEK,MAAM,CAAC;EAC9D;EACA;EACA;EACD;;EAEC;EACA,oBAAMb,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACNN,OAAA;MAAAM,QAAA,gBACCN,OAAA;QAAAM,QAAA,GAAI,GAAC,eAAAN,OAAA;UAAAM,QAAA,EAAMQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BlB,OAAA;QAAAM,QAAA,EAAKQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAM,QAAA,EAAKQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC,gBACH,CAAC;AAKP,CAAC;AAACX,EAAA,CA5BIF,SAAS;EAAA,QACYF,UAAU,EACZC,eAAe;AAAA;AAAAiB,EAAA,GAFlChB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}