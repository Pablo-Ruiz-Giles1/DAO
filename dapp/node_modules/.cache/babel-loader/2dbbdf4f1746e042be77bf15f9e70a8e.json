{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/ipfs/oneipfs.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\nconst Oneipfs = ({\n  nftsid,\n  address\n}) => {\n  _s2();\n  const {\n    useCacheCall,\n    drizzle\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const addr = drizzleState.accounts[0];\n  const [isLoading, setIsLoading] = useState(true); // Estado de carga\n\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const loadDataInterval = setInterval(_s(() => {\n      _s();\n      const data = useCacheCall(\"NFTContract\", \"_nftMetadata\", nftsid);\n      if (data) {\n        setIsLoading(false); // Si se obtienen datos con éxito, detén la carga\n        clearInterval(loadDataInterval); // Detener el intervalo\n      }\n    }, \"bOaGuPmptkQTumVAF3ByF2tpdHA=\", false, function () {\n      return [useCacheCall];\n    }), 1000); // Consultar cada segundo\n\n    return () => {\n      clearInterval(loadDataInterval); // Limpia el intervalo si el componente se desmonta\n    };\n  }, [nftsid]);\n  console.log(\"ID NFT\", nftsid);\n  console.log(\"Address:\", address);\n  const renderContent = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    }\n    switch (data.format) {\n      case \"0\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: IPFS_BASE_URL + data.cid,\n            alt: \"Imagen IPFS\",\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"1\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            src: IPFS_BASE_URL + data.cid,\n            style: {\n              width: \"200px\",\n              height: \"200px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"2\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: IPFS_BASE_URL + data.cid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Formato desconocido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderContent(), addr !== address && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pure-button\",\n      type: \"button\",\n      onClick: ev => {\n        ev.preventDefault();\n        const stackId = drizzle.contracts.NFTContract.methods.exchangeNFTOther.cacheSend(Number(nftsid), addr);\n      },\n      children: \"Comprar\"\n    }, \"submit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s2(Oneipfs, \"79y9YA5pZhJx843pQjS2o/wZPv0=\", false, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = Oneipfs;\nexport default Oneipfs;\nvar _c;\n$RefreshReg$(_c, \"Oneipfs\");","map":{"version":3,"names":["React","useState","useEffect","drizzleReactHooks","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","IPFS_BASE_URL","Oneipfs","nftsid","address","_s2","useCacheCall","drizzle","drizzleState","state","addr","accounts","isLoading","setIsLoading","_s","$RefreshSig$","loadDataInterval","setInterval","data","clearInterval","console","log","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","format","src","cid","alt","style","width","height","controls","className","type","onClick","ev","preventDefault","stackId","contracts","NFTContract","methods","exchangeNFTOther","cacheSend","Number","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/ipfs/oneipfs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\n\nconst IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n\nconst Oneipfs = ({ nftsid , address}) => {\n  const { useCacheCall, drizzle } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const addr = drizzleState.accounts[0];\n  const [isLoading, setIsLoading] = useState(true); // Estado de carga\n\n  useEffect(() => {\n    const loadDataInterval = setInterval(() => {\n      const data = useCacheCall(\"NFTContract\", \"_nftMetadata\", nftsid);\n\n      if (data) {\n        setIsLoading(false); // Si se obtienen datos con éxito, detén la carga\n        clearInterval(loadDataInterval); // Detener el intervalo\n      }\n    }, 1000); // Consultar cada segundo\n\n    return () => {\n      clearInterval(loadDataInterval); // Limpia el intervalo si el componente se desmonta\n    };\n  }, [nftsid]);\n\n  console.log(\"ID NFT\", nftsid);\n  console.log(\"Address:\", address);\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    switch (data.format) {\n      case \"0\":\n        return (\n          <>\n            <img\n              src={IPFS_BASE_URL + data.cid}\n              alt=\"Imagen IPFS\"\n              style={{ width: \"200px\", height: \"200px\" }}\n            />\n            {/* Resto del contenido */}\n          </>\n        );\n      case \"1\":\n        return (\n          <>\n            <video\n              controls\n              src={IPFS_BASE_URL + data.cid}\n              style={{ width: \"200px\", height: \"200px\" }}\n            />\n            {/* Resto del contenido */}\n          </>\n        );\n      case \"2\":\n        return (\n          <>\n            <audio\n              controls\n              src={IPFS_BASE_URL + data.cid}\n            />\n            {/* Resto del contenido */}\n          </>\n        );\n      default:\n        return <p>Formato desconocido</p>;\n    }\n  };\n\n  return (\n    <>\n      {renderContent()}\n      {addr !== address && (\n        <button\n          key=\"submit\"\n          className=\"pure-button\"\n          type=\"button\"\n          onClick={ev => {\n            ev.preventDefault();\n\n            const stackId = drizzle.contracts.NFTContract.methods.exchangeNFTOther.cacheSend(Number(nftsid), addr);\n          }}\n        >\n          Comprar\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Oneipfs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}