{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/company/Companydelete/ADMINCompanydelete.js\",\n  _s2 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\n\n// Custom hook for data fetching\nconst useTokenBalance = selectedData2Option1 => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    useCacheCall\n  } = useDrizzle();\n\n  // Fetch the required data using useCacheCall\n  const fetchData = async () => {\n    _s();\n    if (selectedData2Option1) {\n      try {\n        const tokens = await useCacheCall(\"GovernanceToken\", \"balanceOf\", selectedData2Option1);\n        return tokens;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  _s(fetchData, \"z/G/cQg1FB0V0MhOHt7+f9dwEEc=\", false, function () {\n    return [useCacheCall];\n  });\n  return fetchData();\n};\n_s2(useTokenBalance, \"9+p+EpCu2aqP1/4Z3gz3Q2BOg50=\", false, function () {\n  return [useDrizzle];\n});\nconst TokenCompanyswitch = ({\n  traductores,\n  longitud\n}) => {\n  _s4();\n  const {\n    drizzle\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [selectedData2Option1, setSelectedData2Option1] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n  const [isFormFilled, setIsFormFilled] = useState(false);\n  const address = drizzleState.accounts[0];\n  const handleChangeOption1 = event => {\n    var _traductores;\n    const selectedIndex = event.target.selectedIndex;\n    setSelectedOption('option1');\n    setSelectedData2Option1(((_traductores = traductores[selectedIndex - 1]) === null || _traductores === void 0 ? void 0 : _traductores.data2) || '');\n  };\n\n  // Fetch the required data using the custom hook\n  useEffect(() => {\n    var _s3 = $RefreshSig$();\n    const fetchData = async () => {\n      _s3();\n      const tokens = await useTokenBalance(selectedData2Option1);\n      setIsFormFilled(!!tokens); // Convert tokens to a boolean value\n    };\n    _s3(fetchData, \"HmL2KQUW0bHXXqw/mhOsMhlAPKk=\", false, function () {\n      return [useTokenBalance];\n    });\n    fetchData();\n  }, [selectedData2Option1]);\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    console.log('Formulario enviado para la opción 1');\n    // The isFormFilled state should be true at this point\n\n    //Eliminar Compañia\n    const stackId = drizzle.contracts.Traductores.methods.BurnCompany.cacheSend(selectedData2Option1);\n  };\n  const handleInputChange = event => {\n    const value = event.target.value;\n    if (Number(value) >= 0 || value === '') {\n      setInputNumber(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Selecciona empresa\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedData2Option1,\n            onChange: handleChangeOption1,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), Array.from({\n              length: longitud\n            }, (_, i) => {\n              var _traductores$i, _traductores$i2;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: (_traductores$i = traductores[i]) === null || _traductores$i === void 0 ? void 0 : _traductores$i.data2,\n                children: [(_traductores$i2 = traductores[i]) === null || _traductores$i2 === void 0 ? void 0 : _traductores$i2.data1, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: !isFormFilled,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s4(TokenCompanyswitch, \"RzTsuMZEam7EHT9ORygyHF06+HU=\", false, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = TokenCompanyswitch;\nexport default TokenCompanyswitch;\nvar _c;\n$RefreshReg$(_c, \"TokenCompanyswitch\");","map":{"version":3,"names":["drizzleReactHooks","React","useState","useEffect","Link","jsxDEV","_jsxDEV","useDrizzle","useDrizzleState","useTokenBalance","selectedData2Option1","_s2","_s","$RefreshSig$","useCacheCall","fetchData","tokens","error","console","TokenCompanyswitch","traductores","longitud","_s4","drizzle","drizzleState","state","selectedOption","setSelectedOption","setSelectedData2Option1","inputNumber","setInputNumber","isFormFilled","setIsFormFilled","address","accounts","handleChangeOption1","event","_traductores","selectedIndex","target","data2","_s3","handleSubmit","ev","preventDefault","log","stackId","contracts","Traductores","methods","BurnCompany","cacheSend","handleInputChange","value","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Array","from","length","_","i","_traductores$i","_traductores$i2","data1","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/company/Companydelete/ADMINCompanydelete.js"],"sourcesContent":["import { drizzleReactHooks } from '@drizzle/react-plugin';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\n\n// Custom hook for data fetching\nconst useTokenBalance = (selectedData2Option1) => {\n  const { useCacheCall } = useDrizzle();\n\n  // Fetch the required data using useCacheCall\n  const fetchData = async () => {\n    if (selectedData2Option1) {\n      try {\n        const tokens = await useCacheCall(\"GovernanceToken\", \"balanceOf\", selectedData2Option1);\n        return tokens;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return fetchData();\n};\n\nconst TokenCompanyswitch = ({ traductores, longitud }) => {\n  const { drizzle } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n\n  const [selectedOption, setSelectedOption] = useState('');\n  const [selectedData2Option1, setSelectedData2Option1] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n  const [isFormFilled, setIsFormFilled] = useState(false);\n\n  const address = drizzleState.accounts[0];\n\n  const handleChangeOption1 = (event) => {\n    const selectedIndex = event.target.selectedIndex;\n    setSelectedOption('option1');\n    setSelectedData2Option1(traductores[selectedIndex - 1]?.data2 || '');\n  };\n\n  // Fetch the required data using the custom hook\n  useEffect(() => {\n    const fetchData = async () => {\n      const tokens = await useTokenBalance(selectedData2Option1);\n      setIsFormFilled(!!tokens); // Convert tokens to a boolean value\n    };\n\n    fetchData();\n  }, [selectedData2Option1]);\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    console.log('Formulario enviado para la opción 1');\n    // The isFormFilled state should be true at this point\n\n    //Eliminar Compañia\n    const stackId = drizzle.contracts.Traductores.methods.BurnCompany.cacheSend(selectedData2Option1);\n  };\n\n  const handleInputChange = (event) => {\n    const value = event.target.value;\n    if (Number(value) >= 0 || value === '') {\n      setInputNumber(value);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <p></p>\n        <form>\n          <label>\n            Selecciona empresa\n            <select value={selectedData2Option1} onChange={handleChangeOption1}>\n              <option value=\"\">Seleccionar</option>\n              {Array.from({ length: longitud }, (_, i) => (\n                <option key={i} value={traductores[i]?.data2}>\n                  {traductores[i]?.data1} {/* Aquí se muestra el nombre del traductor */}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button onClick={handleSubmit} disabled={!isFormFilled}>\n            Eliminar\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TokenCompanyswitch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}