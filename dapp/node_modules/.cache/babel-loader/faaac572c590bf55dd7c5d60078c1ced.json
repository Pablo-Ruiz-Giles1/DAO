{"ast":null,"code":"var _s = $RefreshSig$();\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nconst {\n  useDrizzle\n} = drizzleReactHooks;\nconst ADMINCompanyRow = ({\n  TraductorIndex,\n  onDataChange\n}) => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  let {\n    addr,\n    datos,\n    tokens\n  } = useCacheCall(['Traductores'], call => {\n    const addr = call(\"Traductores\", \"companies\", TraductorIndex);\n    const datos = addr && call(\"Traductores\", \"datosCompanies\", addr);\n    const tokens = addr && datos && call(\"GovernanceToken\", \"balanceOf\", addr);\n    return {\n      addr,\n      datos,\n      tokens\n    };\n  });\n  useEffect(() => {\n    if (datos && addr && tokens) {\n      onDataChange(TraductorIndex, datos, addr, tokens);\n    }\n  }, [TraductorIndex, datos, addr, tokens]);\n};\n_s(ADMINCompanyRow, \"QZJ+0+jwtLDek/a6uy47t3nLKVY=\", true, function () {\n  return [useDrizzle];\n});\n_c = ADMINCompanyRow;\nexport default ADMINCompanyRow;\nvar _c;\n$RefreshReg$(_c, \"ADMINCompanyRow\");","map":{"version":3,"names":["drizzleReactHooks","React","useEffect","useState","Link","useDrizzle","ADMINCompanyRow","TraductorIndex","onDataChange","_s","useCacheCall","addr","datos","tokens","call","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/company/Companydelete/ADMINCompanyRow.js"],"sourcesContent":["import {drizzleReactHooks} from '@drizzle/react-plugin'\nimport React, { useEffect, useState } from 'react';\nimport {Link} from \"react-router-dom\";\nconst {useDrizzle} = drizzleReactHooks;\n\nconst ADMINCompanyRow = ({TraductorIndex, onDataChange}) => {\n const {useCacheCall} = useDrizzle();\n let {addr, datos, tokens} = useCacheCall(['Traductores'],\n call => {\n const addr = call(\"Traductores\", \"companies\", TraductorIndex);\n const datos = addr && call(\"Traductores\", \"datosCompanies\", addr);\n const tokens = addr && datos && call(\"GovernanceToken\", \"balanceOf\", addr);\n return {addr, datos, tokens};\n }\n \n );\n\n\n\n useEffect(() => {\n  if (datos && addr && tokens) {\n    onDataChange(TraductorIndex, datos, addr, tokens);\n  }\n}, [TraductorIndex, datos, addr, tokens]);\n\n\n\n\n\n};\nexport default ADMINCompanyRow;"],"mappings":";AAAA,SAAQA,iBAAiB,QAAO,uBAAuB;AACvD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,MAAM;EAACC;AAAU,CAAC,GAAGL,iBAAiB;AAEtC,MAAMM,eAAe,GAAGA,CAAC;EAACC,cAAc;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM;IAACC;EAAY,CAAC,GAAGL,UAAU,CAAC,CAAC;EACnC,IAAI;IAACM,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGH,YAAY,CAAC,CAAC,aAAa,CAAC,EACxDI,IAAI,IAAI;IACR,MAAMH,IAAI,GAAGG,IAAI,CAAC,aAAa,EAAE,WAAW,EAAEP,cAAc,CAAC;IAC7D,MAAMK,KAAK,GAAGD,IAAI,IAAIG,IAAI,CAAC,aAAa,EAAE,gBAAgB,EAAEH,IAAI,CAAC;IACjE,MAAME,MAAM,GAAGF,IAAI,IAAIC,KAAK,IAAIE,IAAI,CAAC,iBAAiB,EAAE,WAAW,EAAEH,IAAI,CAAC;IAC1E,OAAO;MAACA,IAAI;MAAEC,KAAK;MAAEC;IAAM,CAAC;EAC5B,CAEA,CAAC;EAIDX,SAAS,CAAC,MAAM;IACf,IAAIU,KAAK,IAAID,IAAI,IAAIE,MAAM,EAAE;MAC3BL,YAAY,CAACD,cAAc,EAAEK,KAAK,EAAED,IAAI,EAAEE,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACN,cAAc,EAAEK,KAAK,EAAED,IAAI,EAAEE,MAAM,CAAC,CAAC;AAMzC,CAAC;AAACJ,EAAA,CAxBIH,eAAe;EAAA,QACGD,UAAU;AAAA;AAAAU,EAAA,GAD5BT,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}