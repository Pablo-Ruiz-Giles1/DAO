{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/ipfs/watchipfs.js\",\n  _s = $RefreshSig$();\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst Watchipfs = ({\n  children\n}) => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const address = drizzleState.accounts[0];\n  //  const balance = drizzleState.accountBalances[address];\n\n  //Obtenemos los ids de los tokens que tiene este usuario\n  const nftsid = useCacheCall(\"NFTContract\", \"getNFTsByOwner\", address);\n  let data = useCacheCall(\"NFTContract\", \"_nftMetadata\", 2);\n  console.log(\"data\", data);\n  //bucle\n  //Otro componente\n  //SAcar el CID, dado el numero\n  // const admin = useCacheCall(\"NFTContract\", \"_nftMetadata\", admin[0]);\n  const IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n  //Mostrar las imagenes\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: [\"A\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: nftsid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data === null || data === void 0 ? void 0 : data.cid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data === null || data === void 0 ? void 0 : data.creator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), data && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: IPFS_BASE_URL + data.cid,\n      alt: \"Imagen IPFS\",\n      style: {\n        width: \"200px\",\n        height: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Watchipfs, \"nKqIyELmF23rrd1yj7mu0+xqNqg=\", true, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = Watchipfs;\nexport default Watchipfs;\nvar _c;\n$RefreshReg$(_c, \"Watchipfs\");","map":{"version":3,"names":["drizzleReactHooks","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","Watchipfs","children","_s","useCacheCall","drizzleState","state","address","accounts","nftsid","data","console","log","IPFS_BASE_URL","fileName","_jsxFileName","lineNumber","columnNumber","cid","creator","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/ipfs/watchipfs.js"],"sourcesContent":["import {drizzleReactHooks} from '@drizzle/react-plugin'\n\nconst {useDrizzle, useDrizzleState} = drizzleReactHooks;\n\nconst Watchipfs = ({children}) => {\n    const {useCacheCall} = useDrizzle();\n    const drizzleState = useDrizzleState(state => state);\n\n    const address = drizzleState.accounts[0];\n  //  const balance = drizzleState.accountBalances[address];\n  \n    //Obtenemos los ids de los tokens que tiene este usuario\n    const nftsid = useCacheCall(\"NFTContract\", \"getNFTsByOwner\", address);\n\n    let data = useCacheCall(\"NFTContract\", \"_nftMetadata\", 2);\n    console.log(\"data\", data);\n    //bucle\n    //Otro componente\n    //SAcar el CID, dado el numero\n   // const admin = useCacheCall(\"NFTContract\", \"_nftMetadata\", admin[0]);\n   const IPFS_BASE_URL = \"https://ipfs.io/ipfs/\";\n    //Mostrar las imagenes\n    return<>\n<tbody>\n        <tr>\n          <th>\n            A<sub>{nftsid}</sub>\n          </th>\n          <td>{data?.cid}</td>\n          <td>{data?.creator}</td>\n        </tr>\n      </tbody>\n      {data && (\n        <img\n          src={IPFS_BASE_URL + data.cid}\n          alt=\"Imagen IPFS\"\n          style={{ width: \"200px\", height: \"200px\" }}\n        /> )}\n    </>\n\n\n     \n\n};\nexport default Watchipfs;"],"mappings":";;AAAA,SAAQA,iBAAiB,QAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAM;EAACC,UAAU;EAAEC;AAAe,CAAC,GAAGN,iBAAiB;AAEvD,MAAMO,SAAS,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM;IAACC;EAAY,CAAC,GAAGL,UAAU,CAAC,CAAC;EACnC,MAAMM,YAAY,GAAGL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAAC;EAEpD,MAAMC,OAAO,GAAGF,YAAY,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC1C;;EAEE;EACA,MAAMC,MAAM,GAAGL,YAAY,CAAC,aAAa,EAAE,gBAAgB,EAAEG,OAAO,CAAC;EAErE,IAAIG,IAAI,GAAGN,YAAY,CAAC,aAAa,EAAE,cAAc,EAAE,CAAC,CAAC;EACzDO,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;EACzB;EACA;EACA;EACD;EACA,MAAMG,aAAa,GAAG,uBAAuB;EAC5C;EACA,oBAAMjB,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACVN,OAAA;MAAAM,QAAA,eACQN,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,GAAI,GACD,eAAAN,OAAA;YAAAM,QAAA,EAAMO;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACLrB,OAAA;UAAAM,QAAA,EAAKQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ;QAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBrB,OAAA;UAAAM,QAAA,EAAKQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACPP,IAAI,iBACHd,OAAA;MACEwB,GAAG,EAAEP,aAAa,GAAGH,IAAI,CAACQ,GAAI;MAC9BG,GAAG,EAAC,aAAa;MACjBC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAG;EAAA,eACN,CAAC;AAKP,CAAC;AAACd,EAAA,CAvCIF,SAAS;EAAA,QACYF,UAAU,EACZC,eAAe;AAAA;AAAAyB,EAAA,GAFlCxB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}