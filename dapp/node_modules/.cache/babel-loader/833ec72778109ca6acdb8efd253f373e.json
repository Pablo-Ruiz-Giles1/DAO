{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/traductor/traductortip.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst Traductortip = () => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const {\n    drizzle\n  } = useDrizzle();\n  let {\n    addr\n  } = useParams();\n  const datos = useCacheCall(\"Traductores\", \"datosHolders\", addr);\n  const tokens = useCacheCall(\"GovernanceToken\", \"balanceOf\", addr);\n  const drizzleState = useDrizzleState(state => state);\n  const address = drizzleState.accounts[0];\n  // State para el número ingresado en la casilla\n  const [inputNumber, setInputNumber] = useState(\"\");\n\n  // Función para manejar el cambio en la casilla de entrada\n  const handleInputChange = event => {\n    const value = parseInt(event.target.value, 10);\n    setInputNumber(value);\n  };\n\n  // Función para desbloquear el botón\n  const isButtonEnabled = inputNumber >= 1 && inputNumber <= 50;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Valoraci\\xF3n\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputNumber,\n        onChange: handleInputChange,\n        min: 1,\n        max: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isButtonEnabled && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async ev => {\n        ev.preventDefault();\n\n        // Suponiendo que tienes las direcciones `addr` y `address` definidas\n\n        try {\n          // Estimar el gas\n          const estimatedGas = await drizzle.contracts.GovernanceToken.methods.mintCompany.estimateGas(addr, address);\n\n          // Ahora puedes utilizar esta estimación en la transacción\n          const stackId = drizzle.contracts.GovernanceToken.methods.mintCompany.cacheSend(addr, address, {\n            gas: estimatedGas\n          });\n\n          // Lógica adicional si es necesario\n        } catch (error) {\n          // Manejo de errores si la estimación falla o la transacción se rechaza\n          console.error(\"Error:\", error);\n        }\n      },\n      children: \"Recompensa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/traductores\",\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Traductortip, \"8qh11JiQXY/rtUe7kCDLYpqwxeM=\", true, function () {\n  return [useDrizzle, useDrizzle, useParams, useDrizzleState];\n});\n_c = Traductortip;\nexport default Traductortip;\nvar _c;\n$RefreshReg$(_c, \"Traductortip\");","map":{"version":3,"names":["React","useState","drizzleReactHooks","useParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","Traductortip","_s","useCacheCall","drizzle","addr","datos","tokens","drizzleState","state","address","accounts","inputNumber","setInputNumber","handleInputChange","event","value","parseInt","target","isButtonEnabled","children","type","onChange","min","max","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ev","preventDefault","estimatedGas","contracts","GovernanceToken","methods","mintCompany","estimateGas","stackId","cacheSend","gas","error","console","to","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/traductor/traductortip.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { useParams, Link } from \"react-router-dom\";\n\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\n\n\nconst Traductortip = () => {\n    const { useCacheCall } = useDrizzle();\n    const { drizzle } = useDrizzle();\n    let { addr } = useParams();\n    const datos = useCacheCall(\"Traductores\", \"datosHolders\", addr);\n    const tokens = useCacheCall(\"GovernanceToken\", \"balanceOf\", addr);\n    const drizzleState = useDrizzleState(state => state);\n    const address = drizzleState.accounts[0];\n    // State para el número ingresado en la casilla\n    const [inputNumber, setInputNumber] = useState(\"\");\n\n    // Función para manejar el cambio en la casilla de entrada\n    const handleInputChange = (event) => {\n        const value = parseInt(event.target.value, 10);\n        setInputNumber(value);\n    };\n\n    // Función para desbloquear el botón\n    const isButtonEnabled = inputNumber >= 1 && inputNumber <= 50;\n\n    return (\n        <>\n           \n\n            {/* Casilla de entrada */}\n            <label>\n                Valoración\n                <input type=\"number\" value={inputNumber} onChange={handleInputChange} min={1} max={10} />\n            </label>\n\n            {/* Botón desbloqueado si se ingresa un número válido */}\n            {isButtonEnabled && (\n                <button\n                        onClick={async ev => {\n                        ev.preventDefault();\n                        \n                        // Suponiendo que tienes las direcciones `addr` y `address` definidas\n                        \n                        try {\n                            // Estimar el gas\n                            const estimatedGas = await drizzle.contracts.GovernanceToken.methods.mintCompany.estimateGas(addr, address);\n                            \n                            // Ahora puedes utilizar esta estimación en la transacción\n                            const stackId = drizzle.contracts.GovernanceToken.methods.mintCompany.cacheSend(addr, address, {\n                                gas: estimatedGas,\n                            });\n                            \n                            // Lógica adicional si es necesario\n                        } catch (error) {\n                            // Manejo de errores si la estimación falla o la transacción se rechaza\n                            console.error(\"Error:\", error);\n                        }\n                    }}\n                >\n                    Recompensa\n                </button>\n            )}\n\n           \n\n            <Link to=\"/traductores\">Volver</Link>\n        </>\n    );\n};\n\nexport default Traductortip;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}