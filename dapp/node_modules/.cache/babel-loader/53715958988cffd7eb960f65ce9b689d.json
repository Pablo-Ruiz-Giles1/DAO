{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/ipfs/Ipfsreact.js\",\n  _s = $RefreshSig$();\nimport { create } from 'ipfs-http-client';\nimport React, { useState } from \"react\";\nimport { useEffect } from 'react';\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst ipfs = create({\n  host: \"localhost\",\n  port: 5001,\n  protocol: \"http\"\n});\nconst Ipfsreact = () => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const {\n    drizzle\n  } = useDrizzle();\n  const [setLastStackID] = useState(undefined);\n  const drizzleState = useDrizzleState(state => state);\n  const address = drizzleState.accounts[0];\n  const [hash, setHash] = useState(\"\");\n  const [isHashAvailable, setIsHashAvailable] = useState(0);\n  const [fileBuffer, setFileBuffer] = useState(null);\n  const [previewURL, setPreviewURL] = useState(\"\");\n  const [imageName, setImageName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  let [direccion, setDireccion] = useState(\"\");\n\n  //Variables para enviar al contrato\n  const [nameToSubmit, setnameToSubmit] = useState(\"\");\n  const [descriptionToSubmit, setdescriptionToSubmit] = useState(\"\");\n  const [priceToSubmit, setpriceToSubmit] = useState(\"\");\n  const [addressToSubmit, setaddressToSubmit] = useState(\"\");\n\n  // Efecto para verificar si hash está disponible\n  useEffect(() => {\n    if (hash !== \"\") {\n      setIsHashAvailable(1); // Cambiar el valor de isHashAvailable a 1 cuando hash no sea una cadena vacía.\n    } else {\n      setIsHashAvailable(0); // Cambiar el valor de isHashAvailable a 1 cuando hash no sea una cadena vacía.\n    }\n  }, [hash]);\n\n  // Efecto para ejecutar acciones cuando hash está disponible (isHashAvailable === 1)\n  useEffect(() => {\n    if (isHashAvailable === 1) {\n      console.log(\"Imagen:\", nameToSubmit);\n      console.log(\"Descripción:\", descriptionToSubmit);\n      console.log(\"Precio:\", priceToSubmit);\n      console.log(\"Dirección:\", addressToSubmit);\n      console.log(\"CID:\", hash);\n      createNFT(nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit);\n      // const stackId = drizzle.contracts.NFTContract.methods.createNFT.cacheSend(nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit);\n      // setLastStackID(stackId);\n    }\n  }, [isHashAvailable]);\n  const handleDrop = async acceptedFiles => {\n    try {\n      const file = acceptedFiles[0];\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = async () => {\n        const buffer = Buffer(reader.result);\n        setFileBuffer(buffer);\n        // Mostrar la vista previa de la imagen\n        setPreviewURL(URL.createObjectURL(file));\n      };\n    } catch (error) {\n      console.error(\"Error reading the file:\", error);\n    }\n  };\n  const uploadToIPFS = async () => {\n    try {\n      const {\n        cid\n      } = await ipfs.add(fileBuffer);\n      setHash(cid.toString());\n    } catch (error) {\n      console.error(\"Error uploading to IPFS:\", error);\n    }\n  };\n  const getFileFromIPFS = async () => {\n    try {\n      if (!hash) return;\n      const response = await axios.get(`https://ipfs.io/ipfs/${hash}`);\n      console.log(\"File content from IPFS:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching file from IPFS:\", error);\n    }\n  };\n\n  // Función que se ejecuta cuando se rellena el formulario\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Asegurarse de que imageName tenga un valor predeterminado de \"NFT\" si está vacío.\n    const nameToSubmit1 = imageName.trim() === \"\" ? \"NFT\" : imageName;\n\n    // Asegurarse de que description tenga un valor predeterminado de \"NFT de traducción\" si está vacío.\n    const descriptionToSubmit1 = description.trim() === \"\" ? \"NFT de traducción\" : description;\n\n    // Asegurarse de que price tenga un valor predeterminado de \"1\" si está vacío.\n    const priceToSubmit1 = price.trim() === \"\" ? 1 : price;\n\n    // Asegurarse de que direccion tenga un valor predeterminado de la persona que lo crea si está vacío.\n    const addressToSubmit1 = direccion.trim() === \"\" ? address : direccion;\n    setnameToSubmit(nameToSubmit1);\n    setdescriptionToSubmit(descriptionToSubmit1);\n    setpriceToSubmit(priceToSubmit1);\n    setaddressToSubmit(addressToSubmit1);\n    // Aquí puedes hacer lo que desees con los datos del formulario, por ejemplo, enviarlos a un contrato inteligente o a una API.\n    console.log(\"Entramos\");\n    // Subir a IPFS y esperar hasta que se complete la operación.\n    uploadToIPFS();\n    //SE activan los USeEffect\n  };\n\n  const createNFT = async (nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit) => {\n    try {\n      console.log(\"CID de createNFT:\", hash);\n      const stackId = drizzle.contracts.NFTContract.methods.createNFT.cacheSend(nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit);\n      // setLastStackID(stackId);\n    } catch (error) {\n      console.error(\"Error uploading to IPFS:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Subir Videos a IPFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleDrop,\n        children: ({\n          getRootProps,\n          getInputProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps({\n            className: \"dropzone\"\n          }),\n          style: {\n            backgroundColor: 'blue',\n            border: '2px dashed white',\n            borderRadius: '5px',\n            padding: '20px',\n            textAlign: 'center',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arrastre y suelte un archivo aqu\\xED, o haga clic para seleccionarlo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), previewURL && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewURL,\n            alt: \"Preview\",\n            style: {\n              maxWidth: '100%',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hash && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"IPFS Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: hash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getFileFromIPFS,\n            children: \"Conseguir archivo de IPFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informaci\\xF3n de la imagen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Nombre de la imagen: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: imageName,\n              onChange: e => setImageName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Descripci\\xF3n: \\xA0\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Precio: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: price,\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Direcci\\xF3n del creador: \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"address\",\n              name: \"direccion\",\n              value: direccion,\n              placeholder: \"0x0000\",\n              onChange: ev => setDireccion(ev.target.value)\n            }, \"direccion\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !fileBuffer,\n            children: \"Guardar informaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Ipfsreact, \"w0/lMHAMj7h34XsEtgkZyakF97I=\", false, function () {\n  return [useDrizzle, useDrizzle, useDrizzleState];\n});\n_c = Ipfsreact;\nexport default Ipfsreact;\nvar _c;\n$RefreshReg$(_c, \"Ipfsreact\");","map":{"version":3,"names":["create","React","useState","useEffect","Dropzone","axios","drizzleReactHooks","jsxDEV","_jsxDEV","useDrizzle","useDrizzleState","ipfs","host","port","protocol","Ipfsreact","_s","useCacheCall","drizzle","setLastStackID","undefined","drizzleState","state","address","accounts","hash","setHash","isHashAvailable","setIsHashAvailable","fileBuffer","setFileBuffer","previewURL","setPreviewURL","imageName","setImageName","description","setDescription","price","setPrice","direccion","setDireccion","nameToSubmit","setnameToSubmit","descriptionToSubmit","setdescriptionToSubmit","priceToSubmit","setpriceToSubmit","addressToSubmit","setaddressToSubmit","console","log","createNFT","handleDrop","acceptedFiles","file","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","URL","createObjectURL","error","uploadToIPFS","cid","add","toString","getFileFromIPFS","response","get","data","handleSubmit","event","preventDefault","nameToSubmit1","trim","descriptionToSubmit1","priceToSubmit1","addressToSubmit1","stackId","contracts","NFTContract","methods","cacheSend","children","className","style","display","flexDirection","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","getRootProps","getInputProps","backgroundColor","border","borderRadius","padding","textAlign","color","cursor","src","alt","maxWidth","marginTop","onClick","width","onSubmit","type","value","onChange","e","target","name","placeholder","ev","disabled","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/ipfs/Ipfsreact.js"],"sourcesContent":["import { create } from 'ipfs-http-client';\nimport React, { useState } from \"react\";\nimport { useEffect } from 'react';\n\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\n\n\n\n\n\nimport { drizzleReactHooks } from '@drizzle/react-plugin'\n\nconst {useDrizzle, useDrizzleState} = drizzleReactHooks;\n\nconst ipfs = create({ host: \"localhost\", port: 5001, protocol: \"http\" });\n\nconst Ipfsreact = () => {\n  const { useCacheCall } = useDrizzle();\n  const { drizzle } = useDrizzle();\n  const [setLastStackID] = useState(undefined)\n  \n  const drizzleState = useDrizzleState(state => state);\n\n  const address = drizzleState.accounts[0];\n\n  const [hash, setHash] = useState(\"\");\n  const [isHashAvailable, setIsHashAvailable] = useState(0);\n  const [fileBuffer, setFileBuffer] = useState(null);\n  const [previewURL, setPreviewURL] = useState(\"\");\n  const [imageName, setImageName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  let [direccion, setDireccion] = useState(\"\");\n\n//Variables para enviar al contrato\nconst [nameToSubmit, setnameToSubmit] = useState(\"\");\nconst [descriptionToSubmit, setdescriptionToSubmit] = useState(\"\");\nconst [priceToSubmit, setpriceToSubmit] = useState(\"\");\nconst [addressToSubmit, setaddressToSubmit] = useState(\"\");\n\n\n\n  // Efecto para verificar si hash está disponible\nuseEffect(() => {\n  if (hash !== \"\") {\n    setIsHashAvailable(1); // Cambiar el valor de isHashAvailable a 1 cuando hash no sea una cadena vacía.\n  }\n  else{\n    setIsHashAvailable(0); // Cambiar el valor de isHashAvailable a 1 cuando hash no sea una cadena vacía.\n  }\n}, [hash]);\n\n\n// Efecto para ejecutar acciones cuando hash está disponible (isHashAvailable === 1)\nuseEffect(() => {\n  if (isHashAvailable === 1) {\n    console.log(\"Imagen:\", nameToSubmit);\n    console.log(\"Descripción:\", descriptionToSubmit);\n    console.log(\"Precio:\", priceToSubmit);\n    console.log(\"Dirección:\", addressToSubmit);\n    console.log(\"CID:\", hash);\n    createNFT(nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit);\n    // const stackId = drizzle.contracts.NFTContract.methods.createNFT.cacheSend(nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit);\n    // setLastStackID(stackId);\n  }\n}, [isHashAvailable]);\n\n\n\n  const handleDrop = async (acceptedFiles) => {\n    try {\n      const file = acceptedFiles[0];\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = async () => {\n        const buffer = Buffer(reader.result);\n        setFileBuffer(buffer);\n        // Mostrar la vista previa de la imagen\n        setPreviewURL(URL.createObjectURL(file));\n      };\n    } catch (error) {\n      console.error(\"Error reading the file:\", error);\n    }\n  };\n\n  const uploadToIPFS = async () => {\n    try {\n      const { cid } = await ipfs.add(fileBuffer);\n      setHash(cid.toString());\n    } catch (error) {\n      console.error(\"Error uploading to IPFS:\", error);\n    }\n  };\n\n  const getFileFromIPFS = async () => {\n    try {\n      if (!hash) return;\n\n      const response = await axios.get(`https://ipfs.io/ipfs/${hash}`);\n      console.log(\"File content from IPFS:\", response.data);\n    } catch (error) {\n      console.error(\"Error fetching file from IPFS:\", error);\n    }\n  };\n\n\n// Función que se ejecuta cuando se rellena el formulario\nconst handleSubmit = (event) => {\n  event.preventDefault();\n  // Asegurarse de que imageName tenga un valor predeterminado de \"NFT\" si está vacío.\n const  nameToSubmit1 = imageName.trim() === \"\" ? \"NFT\" : imageName;\n\n  // Asegurarse de que description tenga un valor predeterminado de \"NFT de traducción\" si está vacío.\n  const descriptionToSubmit1 = description.trim() === \"\" ? \"NFT de traducción\" : description;\n\n  // Asegurarse de que price tenga un valor predeterminado de \"1\" si está vacío.\n  const priceToSubmit1 = price.trim() === \"\" ? 1 : price;\n\n  // Asegurarse de que direccion tenga un valor predeterminado de la persona que lo crea si está vacío.\n  const  addressToSubmit1 = direccion.trim() === \"\" ? address : direccion;\n\n  setnameToSubmit(nameToSubmit1);\n  setdescriptionToSubmit(descriptionToSubmit1);\n  setpriceToSubmit(priceToSubmit1);\n  setaddressToSubmit(addressToSubmit1);\n  // Aquí puedes hacer lo que desees con los datos del formulario, por ejemplo, enviarlos a un contrato inteligente o a una API.\n  console.log(\"Entramos\");\n  // Subir a IPFS y esperar hasta que se complete la operación.\n  uploadToIPFS();\n  //SE activan los USeEffect\n};\n\n\n\n  const createNFT = async (nameToSubmit, hash, descriptionToSubmit, priceToSubmit, addressToSubmit) => {\n    try {\n      console.log(\"CID de createNFT:\", hash);\n      const stackId = drizzle.contracts.NFTContract.methods.createNFT.cacheSend(\n        nameToSubmit,\n        hash,\n        descriptionToSubmit,\n        priceToSubmit,\n        addressToSubmit\n      );\n     // setLastStackID(stackId);\n    } catch (error) {\n      console.error(\"Error uploading to IPFS:\", error);\n    }\n  };\n\n\n  return (\n    <tbody>\n      <div className=\"App\" style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        <h1>Subir Videos a IPFS</h1>\n        <Dropzone onDrop={handleDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: \"dropzone\" })} style={{\n              backgroundColor: 'blue',\n              border: '2px dashed white',\n              borderRadius: '5px',\n              padding: '20px',\n              textAlign: 'center',\n              color: 'white',\n              cursor: 'pointer',\n            }}>\n              <input {...getInputProps()} />\n              <p>Arrastre y suelte un archivo aquí, o haga clic para seleccionarlo</p>\n              {previewURL && <img src={previewURL} alt=\"Preview\" style={{ maxWidth: '100%', marginTop: '10px' }} />}\n            </div>\n          )}\n        </Dropzone>\n        <div>\n          {hash && (\n            <div>\n              <h2>IPFS Hash:</h2>\n              <p>{hash}</p>\n              <button onClick={getFileFromIPFS}>Conseguir archivo de IPFS</button>\n            </div>\n          )}\n        </div>\n        <div style={{ width: '100%' }}>\n          <h2>Información de la imagen:</h2>\n          <form onSubmit={handleSubmit} >\n          <p> Nombre de la imagen: &nbsp;\n              <input type=\"text\" value={imageName} onChange={(e) => setImageName(e.target.value)} />\n              </p>\n\n              <p> \n              Descripción: &nbsp;\n              <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\n            </p>\n\n            <p> \n              Precio: &nbsp;\n              <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n              </p>\n\n              <p> Dirección del creador: &nbsp;\n                <input key=\"direccion\" type=\"address\" name=\"direccion\" value={direccion} placeholder=\"0x0000\"\n                    onChange={ev => setDireccion(ev.target.value)} /> </p>\n            <button type=\"submit\" disabled={!fileBuffer}>Guardar información</button>\n          </form>\n        </div>\n      </div>\n    </tbody>\n  );\n};\n\nexport default Ipfsreact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}