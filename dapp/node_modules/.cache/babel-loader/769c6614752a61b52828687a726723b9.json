{"ast":null,"code":"import { kTrue, noop } from './utils';\nexport var BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\nfunction ringBuffer() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var overflowAction = arguments[1];\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n  var flush = function flush() {\n    var items = [];\n    while (length) {\n      items.push(take());\n    }\n    return items;\n  };\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit = void 0;\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n\n    take: take,\n    flush: flush\n  };\n}\nexport var buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n  },\n  expanding: function expanding(initialSize) {\n    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n  }\n};","map":{"version":3,"names":["kTrue","noop","BUFFER_OVERFLOW","ON_OVERFLOW_THROW","ON_OVERFLOW_DROP","ON_OVERFLOW_SLIDE","ON_OVERFLOW_EXPAND","zeroBuffer","isEmpty","put","take","ringBuffer","limit","arguments","length","undefined","overflowAction","arr","Array","pushIndex","popIndex","push","it","flush","items","doubledLimit","Error","buffers","none","fixed","dropping","sliding","expanding","initialSize"],"sources":["/home/pablo/Desktop/DAO/dapp/node_modules/redux-saga/es/internal/buffers.js"],"sourcesContent":["import { kTrue, noop } from './utils';\n\nexport var BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\n\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\n\nvar zeroBuffer = { isEmpty: kTrue, put: noop, take: noop };\n\nfunction ringBuffer() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var overflowAction = arguments[1];\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n    while (length) {\n      items.push(take());\n    }\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit = void 0;\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n\n            arr = flush();\n\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n\n            push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nexport var buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n  },\n  expanding: function expanding(initialSize) {\n    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}