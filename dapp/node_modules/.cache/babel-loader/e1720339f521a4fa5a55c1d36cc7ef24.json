{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/dao/Daolist/propose/Daopropose.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { useParams, Link } from 'react-router-dom';\nimport Daopropose2 from './Daopropose2';\nimport DaoTraductorRow from './DaoTraductorRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst Daopropose = ({\n  children\n}) => {\n  _s();\n  const {\n    useCacheCall,\n    useCacheSend\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const addr = drizzleState.accounts[0];\n  const balance = drizzleState.accountBalances[addr];\n  const [sharedData, setSharedData] = useState({});\n  const handleDataChange = (traductorIndex, newData1, newData2) => {\n    setSharedData(prevData => ({\n      ...prevData,\n      [traductorIndex]: {\n        data1: newData1,\n        data2: newData2\n      }\n    }));\n  };\n  let rows = [];\n  const getTraductorLength = useCacheCall('Traductores', 'getTraductorLength') || 0;\n  for (let i = 0; i < getTraductorLength; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(DaoTraductorRow, {\n      TraductorIndex: i,\n      onDataChange: handleDataChange\n    }, 'ab-' + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [rows, /*#__PURE__*/_jsxDEV(Daopropose2, {\n      traductores: sharedData,\n      longitud: getTraductorLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Daopropose, \"1VSfOosHxGKRbBlPUNt2knYoXTc=\", true, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = Daopropose;\nexport default Daopropose;\nvar _c;\n$RefreshReg$(_c, \"Daopropose\");","map":{"version":3,"names":["React","useState","useEffect","drizzleReactHooks","useParams","Link","Daopropose2","DaoTraductorRow","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","Daopropose","children","_s","useCacheCall","useCacheSend","drizzleState","state","addr","accounts","balance","accountBalances","sharedData","setSharedData","handleDataChange","traductorIndex","newData1","newData2","prevData","data1","data2","rows","getTraductorLength","i","push","TraductorIndex","onDataChange","fileName","_jsxFileName","lineNumber","columnNumber","traductores","longitud","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/dao/Daolist/propose/Daopropose.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { useParams, Link } from 'react-router-dom';\n\n\nimport Daopropose2 from './Daopropose2';\nimport DaoTraductorRow from './DaoTraductorRow';\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\n\nconst Daopropose = ({ children }) => {\n  const { useCacheCall, useCacheSend } = useDrizzle();\n  const drizzleState = useDrizzleState((state) => state);\n\n  const addr = drizzleState.accounts[0];\n  const balance = drizzleState.accountBalances[addr];\n\n  const [sharedData, setSharedData] = useState({});\n\n  const handleDataChange = (traductorIndex, newData1, newData2) => {\n    setSharedData((prevData) => ({\n      ...prevData,\n      [traductorIndex]: { data1: newData1, data2: newData2 },\n    }));\n  };\n\n  let rows = [];\n\n  const getTraductorLength = useCacheCall('Traductores', 'getTraductorLength') || 0;\n\n\n\n  for (let i = 0; i < getTraductorLength; i++) {\n    rows.push(<DaoTraductorRow key={'ab-' + i} TraductorIndex={i} onDataChange={handleDataChange} />);\n  }\n\n  return (\n    <>\n      {rows}\n      <Daopropose2 traductores={sharedData} longitud={getTraductorLength}></Daopropose2>\n\n    </>\n  );\n};\n\nexport default Daopropose;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAGlD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,MAAM;EAAEC,UAAU;EAAEC;AAAgB,CAAC,GAAGV,iBAAiB;AAEzD,MAAMW,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGN,UAAU,CAAC,CAAC;EACnD,MAAMO,YAAY,GAAGN,eAAe,CAAEO,KAAK,IAAKA,KAAK,CAAC;EAEtD,MAAMC,IAAI,GAAGF,YAAY,CAACG,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMC,OAAO,GAAGJ,YAAY,CAACK,eAAe,CAACH,IAAI,CAAC;EAElD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAM0B,gBAAgB,GAAGA,CAACC,cAAc,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IAC/DJ,aAAa,CAAEK,QAAQ,KAAM;MAC3B,GAAGA,QAAQ;MACX,CAACH,cAAc,GAAG;QAAEI,KAAK,EAAEH,QAAQ;QAAEI,KAAK,EAAEH;MAAS;IACvD,CAAC,CAAC,CAAC;EACL,CAAC;EAED,IAAII,IAAI,GAAG,EAAE;EAEb,MAAMC,kBAAkB,GAAGlB,YAAY,CAAC,aAAa,EAAE,oBAAoB,CAAC,IAAI,CAAC;EAIjF,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,kBAAkB,EAAEC,CAAC,EAAE,EAAE;IAC3CF,IAAI,CAACG,IAAI,eAAC5B,OAAA,CAACF,eAAe;MAAiB+B,cAAc,EAAEF,CAAE;MAACG,YAAY,EAAEZ;IAAiB,GAA7D,KAAK,GAAGS,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsD,CAAC,CAAC;EACnG;EAEA,oBACElC,OAAA,CAAAE,SAAA;IAAAI,QAAA,GACGmB,IAAI,eACLzB,OAAA,CAACH,WAAW;MAACsC,WAAW,EAAEnB,UAAW;MAACoB,QAAQ,EAAEV;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA,eAElF,CAAC;AAEP,CAAC;AAAC3B,EAAA,CAjCIF,UAAU;EAAA,QACyBF,UAAU,EAC5BC,eAAe;AAAA;AAAAiC,EAAA,GAFhChC,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}