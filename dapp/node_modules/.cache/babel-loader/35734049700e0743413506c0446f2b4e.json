{"ast":null,"code":"import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork } from '../io';\nimport { END } from '../channel';\nexport default function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(undefined, [worker].concat(args, [ac]))\n    };\n  };\n  var action = void 0,\n    setAction = function setAction(ac) {\n      return action = ac;\n    };\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : ['q1', yFork(action)];\n    }\n  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}","map":{"version":3,"names":["fsmIterator","qEnd","safeName","take","fork","END","takeEvery","patternOrChannel","worker","_len","arguments","length","args","Array","_key","yTake","done","value","yFork","ac","apply","undefined","concat","action","setAction","q1","q2","name"],"sources":["/home/pablo/Desktop/DAO/dapp/node_modules/redux-saga/es/internal/sagaHelpers/takeEvery.js"],"sourcesContent":["import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork } from '../io';\nimport { END } from '../channel';\n\nexport default function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = { done: false, value: take(patternOrChannel) };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n\n  var action = void 0,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : ['q1', yFork(action)];\n    }\n  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}"],"mappings":"AAAA,OAAOA,WAAW,IAAIC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAC3D,SAASC,IAAI,EAAEC,IAAI,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,YAAY;AAEhC,eAAe,SAASC,SAASA,CAACC,gBAAgB,EAAEC,MAAM,EAAE;EAC1D,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IACtGF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAClC;EAEA,IAAIC,KAAK,GAAG;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAEd,IAAI,CAACI,gBAAgB;EAAE,CAAC;EAC1D,IAAIW,KAAK,GAAG,SAASA,KAAKA,CAACC,EAAE,EAAE;IAC7B,OAAO;MAAEH,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAEb,IAAI,CAACgB,KAAK,CAACC,SAAS,EAAE,CAACb,MAAM,CAAC,CAACc,MAAM,CAACV,IAAI,EAAE,CAACO,EAAE,CAAC,CAAC;IAAE,CAAC;EACnF,CAAC;EAED,IAAII,MAAM,GAAG,KAAK,CAAC;IACfC,SAAS,GAAG,SAASA,SAASA,CAACL,EAAE,EAAE;MACrC,OAAOI,MAAM,GAAGJ,EAAE;IACpB,CAAC;EAED,OAAOnB,WAAW,CAAC;IACjByB,EAAE,EAAE,SAASA,EAAEA,CAAA,EAAG;MAChB,OAAO,CAAC,IAAI,EAAEV,KAAK,EAAES,SAAS,CAAC;IACjC,CAAC;IACDE,EAAE,EAAE,SAASA,EAAEA,CAAA,EAAG;MAChB,OAAOH,MAAM,KAAKlB,GAAG,GAAG,CAACJ,IAAI,CAAC,GAAG,CAAC,IAAI,EAAEiB,KAAK,CAACK,MAAM,CAAC,CAAC;IACxD;EACF,CAAC,EAAE,IAAI,EAAE,YAAY,GAAGrB,QAAQ,CAACK,gBAAgB,CAAC,GAAG,IAAI,GAAGC,MAAM,CAACmB,IAAI,GAAG,GAAG,CAAC;AAChF"},"metadata":{},"sourceType":"module"}