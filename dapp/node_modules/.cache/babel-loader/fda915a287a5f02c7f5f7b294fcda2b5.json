{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/dao/Daowatch.js\",\n  _s = $RefreshSig$();\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle,\n  useDrizzleState\n} = drizzleReactHooks;\nconst Daowatch = ({\n  DaoIndex\n}) => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const drizzleState = useDrizzleState(state => state);\n  const address = drizzleState.accounts[0];\n  const balance = drizzleState.accountBalances[addr];\n  let {\n    addr,\n    datos\n  } = useCacheCall(['GovernorContract'], call => {\n    const addr = call(\"GovernorContract\", \"proposes\", alumnoIndex);\n    const datos = addr && call(\"GovernorContract\", \"datosPropose\", addr);\n    return {\n      addr,\n      datos\n    };\n  });\n\n  /*\n  // Leer todos los campos de cada propuesta en el array proposes\n  for (let i = 0; i < proposesLength; i++) {\n    const proposalId = await govcontract.proposes(i);\n    const proposalData = await govcontract.datosPropose(proposalId);\n  \n    console.log(\"Proposal ID:\", proposalData.id.toString());\n    console.log(\"Targets:\", proposalData.targets);\n    console.log(\"Calldatas:\", proposalData.calldatas);\n    console.log(\"Description:\", proposalData.description);\n    console.log(\"------------------------------------\");\n  */\n\n  const proposesLength = useCacheCall(\"GovernorContract\", \"s_proposalCount\");\n  //  const tokens = useCacheCall(\"GovernanceToken\", \"balanceOf\", addr);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pagina de la DAO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Propuestas \", proposesLength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Daowatch, \"o3Gn64u861zYWRsPENVXYREZGio=\", true, function () {\n  return [useDrizzle, useDrizzleState];\n});\n_c = Daowatch;\nexport default Daowatch;\nvar _c;\n$RefreshReg$(_c, \"Daowatch\");","map":{"version":3,"names":["drizzleReactHooks","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","useDrizzle","useDrizzleState","Daowatch","DaoIndex","_s","useCacheCall","drizzleState","state","address","accounts","balance","accountBalances","addr","datos","call","alumnoIndex","proposesLength","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/dao/Daowatch.js"],"sourcesContent":["import { drizzleReactHooks } from '@drizzle/react-plugin'\n\n\n\nimport {Link} from \"react-router-dom\";\n\n\nconst { useDrizzle, useDrizzleState } = drizzleReactHooks;\n\nconst Daowatch = ({DaoIndex}) => {\n\n    const {useCacheCall} = useDrizzle();\n    const drizzleState = useDrizzleState(state => state);\n\n    const address = drizzleState.accounts[0];\n    const balance = drizzleState.accountBalances[addr];\n    \n    \n\n    \n    let {addr, datos} = useCacheCall(['GovernorContract'],\n    call => {\n    const addr = call(\"GovernorContract\", \"proposes\", alumnoIndex);\n    const datos = addr && call(\"GovernorContract\", \"datosPropose\", addr);\n    return {addr, datos};\n    }\n    );\n\n/*\n// Leer todos los campos de cada propuesta en el array proposes\nfor (let i = 0; i < proposesLength; i++) {\n  const proposalId = await govcontract.proposes(i);\n  const proposalData = await govcontract.datosPropose(proposalId);\n\n  console.log(\"Proposal ID:\", proposalData.id.toString());\n  console.log(\"Targets:\", proposalData.targets);\n  console.log(\"Calldatas:\", proposalData.calldatas);\n  console.log(\"Description:\", proposalData.description);\n  console.log(\"------------------------------------\");\n*/\n\n  \n    const proposesLength = useCacheCall(\"GovernorContract\", \"s_proposalCount\");\n  //  const tokens = useCacheCall(\"GovernanceToken\", \"balanceOf\", addr);\n\n\n\n\n\n\n   return     <>\n   <h1>Pagina de la DAO </h1>\n   <h3>Propuestas {proposesLength}</h3>\n    </>\n    \n   \n\n};\nexport default Daowatch;"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,uBAAuB;AAIzD,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGtC,MAAM;EAAEC,UAAU;EAAEC;AAAgB,CAAC,GAAGP,iBAAiB;AAEzD,MAAMQ,QAAQ,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE7B,MAAM;IAACC;EAAY,CAAC,GAAGL,UAAU,CAAC,CAAC;EACnC,MAAMM,YAAY,GAAGL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAAC;EAEpD,MAAMC,OAAO,GAAGF,YAAY,CAACG,QAAQ,CAAC,CAAC,CAAC;EACxC,MAAMC,OAAO,GAAGJ,YAAY,CAACK,eAAe,CAACC,IAAI,CAAC;EAKlD,IAAI;IAACA,IAAI;IAAEC;EAAK,CAAC,GAAGR,YAAY,CAAC,CAAC,kBAAkB,CAAC,EACrDS,IAAI,IAAI;IACR,MAAMF,IAAI,GAAGE,IAAI,CAAC,kBAAkB,EAAE,UAAU,EAAEC,WAAW,CAAC;IAC9D,MAAMF,KAAK,GAAGD,IAAI,IAAIE,IAAI,CAAC,kBAAkB,EAAE,cAAc,EAAEF,IAAI,CAAC;IACpE,OAAO;MAACA,IAAI;MAAEC;IAAK,CAAC;EACpB,CACA,CAAC;;EAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,MAAMG,cAAc,GAAGX,YAAY,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;EAC5E;;EAOC,oBAAWR,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACXpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA;MAAAoB,QAAA,GAAI,aAAW,EAACD,cAAc;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACjC,CAAC;AAIP,CAAC;AAACjB,EAAA,CAhDIF,QAAQ;EAAA,QAEaF,UAAU,EACZC,eAAe;AAAA;AAAAqB,EAAA,GAHlCpB,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}