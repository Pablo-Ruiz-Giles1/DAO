{"ast":null,"code":"var _jsxFileName = \"/home/pablo/Desktop/DAO/dapp/src/components/dao/Daolist/propose/DaoTraductorRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useDrizzle\n} = drizzleReactHooks;\nconst DaoTraductorRow = ({\n  TraductorIndex\n}) => {\n  _s();\n  const {\n    useCacheCall\n  } = useDrizzle();\n  const datosOptions = [1, 2, 3]; // Ejemplo de datosOptions, puedes cambiarlo según tus necesidades\n  const {\n    addr,\n    datos\n  } = useCacheCall(['Traductores'], call => {\n    const addr = call('Traductores', 's_traductores', TraductorIndex);\n    const datos = addr && call('Traductores', 'datosHolders', addr);\n    return {\n      addr,\n      datos\n    };\n  });\n  const [selectedData, setSelectedData] = useState(datosOptions ? datosOptions[0] : '');\n  const handleDataChange = event => {\n    setSelectedData(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: /*#__PURE__*/_jsxDEV(\"td\", {\n      children: datosOptions ? /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedData,\n        onChange: handleDataChange,\n        children: datosOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: selectedData,\n        onChange: handleDataChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, 'TRA-' + TraductorIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DaoTraductorRow, \"W0lHYT0GqCxA6KU13WRCnXouznk=\", true, function () {\n  return [useDrizzle];\n});\n_c = DaoTraductorRow;\nexport default DaoTraductorRow;\nvar _c;\n$RefreshReg$(_c, \"DaoTraductorRow\");","map":{"version":3,"names":["React","useState","drizzleReactHooks","jsxDEV","_jsxDEV","useDrizzle","DaoTraductorRow","TraductorIndex","_s","useCacheCall","datosOptions","addr","datos","call","selectedData","setSelectedData","handleDataChange","event","target","value","children","onChange","map","option","index","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/pablo/Desktop/DAO/dapp/src/components/dao/Daolist/propose/DaoTraductorRow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { drizzleReactHooks } from '@drizzle/react-plugin';\n\nconst { useDrizzle } = drizzleReactHooks;\n\nconst DaoTraductorRow = ({ TraductorIndex }) => {\n  const { useCacheCall } = useDrizzle();\n  const datosOptions = [1, 2, 3]; // Ejemplo de datosOptions, puedes cambiarlo según tus necesidades\n  const { addr, datos } = useCacheCall(['Traductores'], (call) => {\n    const addr = call('Traductores', 's_traductores', TraductorIndex);\n    const datos = addr && call('Traductores', 'datosHolders', addr);\n    return { addr, datos };\n  });\n\n  const [selectedData, setSelectedData] = useState(datosOptions ? datosOptions[0] : '');\n\n  const handleDataChange = (event) => {\n    setSelectedData(event.target.value);\n  };\n\n  return (\n    <tr key={'TRA-' + TraductorIndex}>\n      <td>\n        {datosOptions ? (\n          <select value={selectedData} onChange={handleDataChange}>\n            {datosOptions.map((option, index) => (\n              <option key={index} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <input type=\"number\" value={selectedData} onChange={handleDataChange} />\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default DaoTraductorRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAM;EAAEC;AAAW,CAAC,GAAGH,iBAAiB;AAExC,MAAMI,eAAe,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC;EAAa,CAAC,GAAGJ,UAAU,CAAC,CAAC;EACrC,MAAMK,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGH,YAAY,CAAC,CAAC,aAAa,CAAC,EAAGI,IAAI,IAAK;IAC9D,MAAMF,IAAI,GAAGE,IAAI,CAAC,aAAa,EAAE,eAAe,EAAEN,cAAc,CAAC;IACjE,MAAMK,KAAK,GAAGD,IAAI,IAAIE,IAAI,CAAC,aAAa,EAAE,cAAc,EAAEF,IAAI,CAAC;IAC/D,OAAO;MAAEA,IAAI;MAAEC;IAAM,CAAC;EACxB,CAAC,CAAC;EAEF,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACS,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAErF,MAAMM,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,EACGV,YAAY,gBACXN,OAAA;QAAQe,KAAK,EAAEL,YAAa;QAACO,QAAQ,EAAEL,gBAAiB;QAAAI,QAAA,EACrDV,YAAY,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BpB,OAAA;UAAoBe,KAAK,EAAEI,MAAO;UAAAH,QAAA,EAC/BG;QAAM,GADIC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,gBAETxB,OAAA;QAAOyB,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAEL,YAAa;QAACO,QAAQ,EAAEL;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACxE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,GAbE,MAAM,GAAGrB,cAAc;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAc5B,CAAC;AAET,CAAC;AAACpB,EAAA,CAhCIF,eAAe;EAAA,QACMD,UAAU;AAAA;AAAAyB,EAAA,GAD/BxB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}